@*
	For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@

@using System.Collections.Generic
@using System.Net;
@model NodeModel

@{
	ViewData["Title"] = $"Node {Model.Guid}";

	NodeModel[] connectedNodes;
	try { connectedNodes = Model.GetConnectedNodes(); }
	catch (WebException) { connectedNodes = new NodeModel[0]; }
}

<h2>
	Details for node @Model.DnsHostname <small>on port @Model.Port</small>
</h2>

<hr />

<dl class="dl-horizontal">
	@if (string.Equals(Model.DnsHostname, Model.Hostname, StringComparison.OrdinalIgnoreCase))
	{
		<dt>Hostname</dt>
		<dd>@Model.Hostname</dd>

	}
	else
	{
		<dt>Hostname (DNS)</dt>
		<dd>@Model.DnsHostname</dd>
		<dt>Hostname (Raw)</dt>
		<dd>@Model.Hostname</dd>
	}
	<dt>Port</dt>
	<dd>@Model.Port</dd>
</dl>

@if (connectedNodes.Any())
{
	<h3>There are @connectedNodes.Length nodes connected to this node.</h3>
	<div class="list-group">
		@foreach (var connectedNode in connectedNodes)
		{
			NodeModel[] subConnectedNodes;
			try { subConnectedNodes = connectedNode.GetConnectedNodes(); }
			catch (WebException) { subConnectedNodes = new NodeModel[0]; }

			<a class="list-group-item" asp-controller="Nodes" asp-action="Details" asp-route-guid="@connectedNode.Guid">
				<span class="badge">@connectedNode.Guid</span>
				<h4 class="list-group-item-heading">
					@connectedNode.DnsHostname <small>on port @connectedNode.Port</small>
				</h4>
				<p class="list-group-item-text">
					@subConnectedNodes.Length direct connections.<br />
					@string.Join(", ", subConnectedNodes.Select(n => $"{n.DnsHostname}:{n.Port}"))
				</p>
			</a>
		}
	</div>
}
else
{
	<p>This node is not connected to any nodes.</p>
}